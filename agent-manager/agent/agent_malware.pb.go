// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: agent_malware.proto

package agent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MalwareStatus int32

const (
	MalwareStatus_NEW      MalwareStatus = 0
	MalwareStatus_DELETED  MalwareStatus = 1
	MalwareStatus_EXCLUDED MalwareStatus = 2
	MalwareStatus_RESTORED MalwareStatus = 3
)

// Enum value maps for MalwareStatus.
var (
	MalwareStatus_name = map[int32]string{
		0: "NEW",
		1: "DELETED",
		2: "EXCLUDED",
		3: "RESTORED",
	}
	MalwareStatus_value = map[string]int32{
		"NEW":      0,
		"DELETED":  1,
		"EXCLUDED": 2,
		"RESTORED": 3,
	}
)

func (x MalwareStatus) Enum() *MalwareStatus {
	p := new(MalwareStatus)
	*p = x
	return p
}

func (x MalwareStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MalwareStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_malware_proto_enumTypes[0].Descriptor()
}

func (MalwareStatus) Type() protoreflect.EnumType {
	return &file_agent_malware_proto_enumTypes[0]
}

func (x MalwareStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MalwareStatus.Descriptor instead.
func (MalwareStatus) EnumDescriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{0}
}

type ListExclusionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exclusions []*AgentMalwareExclusion `protobuf:"bytes,1,rep,name=exclusions,proto3" json:"exclusions,omitempty"`
}

func (x *ListExclusionResponse) Reset() {
	*x = ListExclusionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExclusionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExclusionResponse) ProtoMessage() {}

func (x *ListExclusionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExclusionResponse.ProtoReflect.Descriptor instead.
func (*ListExclusionResponse) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{0}
}

func (x *ListExclusionResponse) GetExclusions() []*AgentMalwareExclusion {
	if x != nil {
		return x.Exclusions
	}
	return nil
}

type ListExclusionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int64 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *ListExclusionRequest) Reset() {
	*x = ListExclusionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExclusionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExclusionRequest) ProtoMessage() {}

func (x *ListExclusionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExclusionRequest.ProtoReflect.Descriptor instead.
func (*ListExclusionRequest) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{1}
}

func (x *ListExclusionRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type ChangeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MalwareId string        `protobuf:"bytes,1,opt,name=malware_id,json=malwareId,proto3" json:"malware_id,omitempty"`
	Status    MalwareStatus `protobuf:"varint,2,opt,name=status,proto3,enum=agent.MalwareStatus" json:"status,omitempty"`
}

func (x *ChangeStatusRequest) Reset() {
	*x = ChangeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStatusRequest) ProtoMessage() {}

func (x *ChangeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStatusRequest.ProtoReflect.Descriptor instead.
func (*ChangeStatusRequest) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeStatusRequest) GetMalwareId() string {
	if x != nil {
		return x.MalwareId
	}
	return ""
}

func (x *ChangeStatusRequest) GetStatus() MalwareStatus {
	if x != nil {
		return x.Status
	}
	return MalwareStatus_NEW
}

type AgentMalwareDetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId     uint32        `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	FilePath    string        `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Sha256      string        `protobuf:"bytes,4,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Md5         string        `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	Description string        `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Status      MalwareStatus `protobuf:"varint,7,opt,name=status,proto3,enum=agent.MalwareStatus" json:"status,omitempty"`
}

func (x *AgentMalwareDetection) Reset() {
	*x = AgentMalwareDetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMalwareDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMalwareDetection) ProtoMessage() {}

func (x *AgentMalwareDetection) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMalwareDetection.ProtoReflect.Descriptor instead.
func (*AgentMalwareDetection) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{3}
}

func (x *AgentMalwareDetection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentMalwareDetection) GetAgentId() uint32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentMalwareDetection) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *AgentMalwareDetection) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *AgentMalwareDetection) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AgentMalwareDetection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AgentMalwareDetection) GetStatus() MalwareStatus {
	if x != nil {
		return x.Status
	}
	return MalwareStatus_NEW
}

type AgentMalwareHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MalwareId  uint32        `protobuf:"varint,2,opt,name=malware_id,json=malwareId,proto3" json:"malware_id,omitempty"`
	PrevStatus MalwareStatus `protobuf:"varint,3,opt,name=prev_status,json=prevStatus,proto3,enum=agent.MalwareStatus" json:"prev_status,omitempty"`
	ToStatus   MalwareStatus `protobuf:"varint,4,opt,name=to_status,json=toStatus,proto3,enum=agent.MalwareStatus" json:"to_status,omitempty"`
	ChangedBy  string        `protobuf:"bytes,5,opt,name=changed_by,json=changedBy,proto3" json:"changed_by,omitempty"`
}

func (x *AgentMalwareHistory) Reset() {
	*x = AgentMalwareHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMalwareHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMalwareHistory) ProtoMessage() {}

func (x *AgentMalwareHistory) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMalwareHistory.ProtoReflect.Descriptor instead.
func (*AgentMalwareHistory) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{4}
}

func (x *AgentMalwareHistory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentMalwareHistory) GetMalwareId() uint32 {
	if x != nil {
		return x.MalwareId
	}
	return 0
}

func (x *AgentMalwareHistory) GetPrevStatus() MalwareStatus {
	if x != nil {
		return x.PrevStatus
	}
	return MalwareStatus_NEW
}

func (x *AgentMalwareHistory) GetToStatus() MalwareStatus {
	if x != nil {
		return x.ToStatus
	}
	return MalwareStatus_NEW
}

func (x *AgentMalwareHistory) GetChangedBy() string {
	if x != nil {
		return x.ChangedBy
	}
	return ""
}

type AgentMalwareExclusion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExcludeFilePath    string `protobuf:"bytes,2,opt,name=exclude_file_path,json=excludeFilePath,proto3" json:"exclude_file_path,omitempty"`
	ExcludedBy         string `protobuf:"bytes,3,opt,name=excluded_by,json=excludedBy,proto3" json:"excluded_by,omitempty"`
	ExcludeDescription string `protobuf:"bytes,4,opt,name=exclude_description,json=excludeDescription,proto3" json:"exclude_description,omitempty"`
	AgentId            int64  `protobuf:"varint,5,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *AgentMalwareExclusion) Reset() {
	*x = AgentMalwareExclusion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMalwareExclusion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMalwareExclusion) ProtoMessage() {}

func (x *AgentMalwareExclusion) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMalwareExclusion.ProtoReflect.Descriptor instead.
func (*AgentMalwareExclusion) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{5}
}

func (x *AgentMalwareExclusion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentMalwareExclusion) GetExcludeFilePath() string {
	if x != nil {
		return x.ExcludeFilePath
	}
	return ""
}

func (x *AgentMalwareExclusion) GetExcludedBy() string {
	if x != nil {
		return x.ExcludedBy
	}
	return ""
}

func (x *AgentMalwareExclusion) GetExcludeDescription() string {
	if x != nil {
		return x.ExcludeDescription
	}
	return ""
}

func (x *AgentMalwareExclusion) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

// ListAgentsRequest message definition
type ListMalwareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber     int32    `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize       int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SearchQuery    string   `protobuf:"bytes,3,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	SortBy         []string `protobuf:"bytes,4,rep,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortDescending bool     `protobuf:"varint,5,opt,name=sort_descending,json=sortDescending,proto3" json:"sort_descending,omitempty"`
}

func (x *ListMalwareRequest) Reset() {
	*x = ListMalwareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMalwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMalwareRequest) ProtoMessage() {}

func (x *ListMalwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMalwareRequest.ProtoReflect.Descriptor instead.
func (*ListMalwareRequest) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{6}
}

func (x *ListMalwareRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMalwareRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMalwareRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *ListMalwareRequest) GetSortBy() []string {
	if x != nil {
		return x.SortBy
	}
	return nil
}

func (x *ListMalwareRequest) GetSortDescending() bool {
	if x != nil {
		return x.SortDescending
	}
	return false
}

// ListAgentsResponse message definition
type ListMalwareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Malware      []*AgentMalwareDetection `protobuf:"bytes,1,rep,name=malware,proto3" json:"malware,omitempty"`
	TotalPages   int32                    `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalResults int32                    `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
}

func (x *ListMalwareResponse) Reset() {
	*x = ListMalwareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMalwareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMalwareResponse) ProtoMessage() {}

func (x *ListMalwareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMalwareResponse.ProtoReflect.Descriptor instead.
func (*ListMalwareResponse) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{7}
}

func (x *ListMalwareResponse) GetMalware() []*AgentMalwareDetection {
	if x != nil {
		return x.Malware
	}
	return nil
}

func (x *ListMalwareResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *ListMalwareResponse) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

type ListMalwareHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber     int32    `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize       int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SearchQuery    string   `protobuf:"bytes,3,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	SortBy         []string `protobuf:"bytes,4,rep,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortDescending bool     `protobuf:"varint,5,opt,name=sort_descending,json=sortDescending,proto3" json:"sort_descending,omitempty"`
}

func (x *ListMalwareHistoryRequest) Reset() {
	*x = ListMalwareHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMalwareHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMalwareHistoryRequest) ProtoMessage() {}

func (x *ListMalwareHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMalwareHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListMalwareHistoryRequest) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{8}
}

func (x *ListMalwareHistoryRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMalwareHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMalwareHistoryRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *ListMalwareHistoryRequest) GetSortBy() []string {
	if x != nil {
		return x.SortBy
	}
	return nil
}

func (x *ListMalwareHistoryRequest) GetSortDescending() bool {
	if x != nil {
		return x.SortDescending
	}
	return false
}

// ListAgentsResponse message definition
type ListMalwareHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Malware      []*AgentMalwareHistory `protobuf:"bytes,1,rep,name=malware,proto3" json:"malware,omitempty"`
	TotalPages   int32                  `protobuf:"varint,2,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	TotalResults int32                  `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
}

func (x *ListMalwareHistoryResponse) Reset() {
	*x = ListMalwareHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_malware_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMalwareHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMalwareHistoryResponse) ProtoMessage() {}

func (x *ListMalwareHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_malware_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMalwareHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListMalwareHistoryResponse) Descriptor() ([]byte, []int) {
	return file_agent_malware_proto_rawDescGZIP(), []int{9}
}

func (x *ListMalwareHistoryResponse) GetMalware() []*AgentMalwareHistory {
	if x != nil {
		return x.Malware
	}
	return nil
}

func (x *ListMalwareHistoryResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *ListMalwareHistoryResponse) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

var File_agent_malware_proto protoreflect.FileDescriptor

var file_agent_malware_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x45, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68,
	0x61, 0x32, 0x35, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6c, 0x77, 0x61,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x74,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x42, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2f, 0x0a,
	0x13, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d,
	0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72,
	0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x61, 0x6c, 0x77,
	0x61, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6f, 0x72, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x61, 0x6c,
	0x77, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x2a, 0x41, 0x0a, 0x0d, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x45, 0x58, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x53, 0x54, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x03, 0x32, 0xc9, 0x03, 0x0a, 0x13, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77,
	0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72,
	0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x55,
	0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6c, 0x77,
	0x61, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x75, 0x74, 0x6d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x55, 0x54, 0x4d, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agent_malware_proto_rawDescOnce sync.Once
	file_agent_malware_proto_rawDescData = file_agent_malware_proto_rawDesc
)

func file_agent_malware_proto_rawDescGZIP() []byte {
	file_agent_malware_proto_rawDescOnce.Do(func() {
		file_agent_malware_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_malware_proto_rawDescData)
	})
	return file_agent_malware_proto_rawDescData
}

var file_agent_malware_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agent_malware_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_agent_malware_proto_goTypes = []interface{}{
	(MalwareStatus)(0),                 // 0: agent.MalwareStatus
	(*ListExclusionResponse)(nil),      // 1: agent.ListExclusionResponse
	(*ListExclusionRequest)(nil),       // 2: agent.ListExclusionRequest
	(*ChangeStatusRequest)(nil),        // 3: agent.ChangeStatusRequest
	(*AgentMalwareDetection)(nil),      // 4: agent.AgentMalwareDetection
	(*AgentMalwareHistory)(nil),        // 5: agent.AgentMalwareHistory
	(*AgentMalwareExclusion)(nil),      // 6: agent.AgentMalwareExclusion
	(*ListMalwareRequest)(nil),         // 7: agent.ListMalwareRequest
	(*ListMalwareResponse)(nil),        // 8: agent.ListMalwareResponse
	(*ListMalwareHistoryRequest)(nil),  // 9: agent.ListMalwareHistoryRequest
	(*ListMalwareHistoryResponse)(nil), // 10: agent.ListMalwareHistoryResponse
}
var file_agent_malware_proto_depIdxs = []int32{
	6,  // 0: agent.ListExclusionResponse.exclusions:type_name -> agent.AgentMalwareExclusion
	0,  // 1: agent.ChangeStatusRequest.status:type_name -> agent.MalwareStatus
	0,  // 2: agent.AgentMalwareDetection.status:type_name -> agent.MalwareStatus
	0,  // 3: agent.AgentMalwareHistory.prev_status:type_name -> agent.MalwareStatus
	0,  // 4: agent.AgentMalwareHistory.to_status:type_name -> agent.MalwareStatus
	4,  // 5: agent.ListMalwareResponse.malware:type_name -> agent.AgentMalwareDetection
	5,  // 6: agent.ListMalwareHistoryResponse.malware:type_name -> agent.AgentMalwareHistory
	2,  // 7: agent.AgentMalwareService.GetAgentExclusions:input_type -> agent.ListExclusionRequest
	4,  // 8: agent.AgentMalwareService.CreateNewMalwareEntry:input_type -> agent.AgentMalwareDetection
	3,  // 9: agent.AgentMalwareService.ChangeMalwareStatus:input_type -> agent.ChangeStatusRequest
	7,  // 10: agent.AgentMalwareService.ListAgentMalware:input_type -> agent.ListMalwareRequest
	9,  // 11: agent.AgentMalwareService.ListAgentMalwareHistory:input_type -> agent.ListMalwareHistoryRequest
	1,  // 12: agent.AgentMalwareService.GetAgentExclusions:output_type -> agent.ListExclusionResponse
	4,  // 13: agent.AgentMalwareService.CreateNewMalwareEntry:output_type -> agent.AgentMalwareDetection
	4,  // 14: agent.AgentMalwareService.ChangeMalwareStatus:output_type -> agent.AgentMalwareDetection
	8,  // 15: agent.AgentMalwareService.ListAgentMalware:output_type -> agent.ListMalwareResponse
	10, // 16: agent.AgentMalwareService.ListAgentMalwareHistory:output_type -> agent.ListMalwareHistoryResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_agent_malware_proto_init() }
func file_agent_malware_proto_init() {
	if File_agent_malware_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agent_malware_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExclusionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExclusionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMalwareDetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMalwareHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMalwareExclusion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMalwareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMalwareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMalwareHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_malware_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMalwareHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_malware_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_malware_proto_goTypes,
		DependencyIndexes: file_agent_malware_proto_depIdxs,
		EnumInfos:         file_agent_malware_proto_enumTypes,
		MessageInfos:      file_agent_malware_proto_msgTypes,
	}.Build()
	File_agent_malware_proto = out.File
	file_agent_malware_proto_rawDesc = nil
	file_agent_malware_proto_goTypes = nil
	file_agent_malware_proto_depIdxs = nil
}
