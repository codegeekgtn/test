// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: agent_config.proto

package agent

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AgentConfigService_GetAgentConfig_FullMethodName          = "/agent.AgentConfigService/GetAgentConfig"
	AgentConfigService_AgentModuleUpdateStream_FullMethodName = "/agent.AgentConfigService/AgentModuleUpdateStream"
)

// AgentConfigServiceClient is the client API for AgentConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AgentConfigServiceClient interface {
	GetAgentConfig(ctx context.Context, in *ListAgentsModulesRequest, opts ...grpc.CallOption) (*ListAgentsModulesResponse, error)
	AgentModuleUpdateStream(ctx context.Context, opts ...grpc.CallOption) (grpc.BidiStreamingClient[AgentModuleConfiguration, UpdateConfigResponse], error)
}

type agentConfigServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentConfigServiceClient(cc grpc.ClientConnInterface) AgentConfigServiceClient {
	return &agentConfigServiceClient{cc}
}

func (c *agentConfigServiceClient) GetAgentConfig(ctx context.Context, in *ListAgentsModulesRequest, opts ...grpc.CallOption) (*ListAgentsModulesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListAgentsModulesResponse)
	err := c.cc.Invoke(ctx, AgentConfigService_GetAgentConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentConfigServiceClient) AgentModuleUpdateStream(ctx context.Context, opts ...grpc.CallOption) (grpc.BidiStreamingClient[AgentModuleConfiguration, UpdateConfigResponse], error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &AgentConfigService_ServiceDesc.Streams[0], AgentConfigService_AgentModuleUpdateStream_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &grpc.GenericClientStream[AgentModuleConfiguration, UpdateConfigResponse]{ClientStream: stream}
	return x, nil
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type AgentConfigService_AgentModuleUpdateStreamClient = grpc.BidiStreamingClient[AgentModuleConfiguration, UpdateConfigResponse]

// AgentConfigServiceServer is the server API for AgentConfigService service.
// All implementations must embed UnimplementedAgentConfigServiceServer
// for forward compatibility.
type AgentConfigServiceServer interface {
	GetAgentConfig(context.Context, *ListAgentsModulesRequest) (*ListAgentsModulesResponse, error)
	AgentModuleUpdateStream(grpc.BidiStreamingServer[AgentModuleConfiguration, UpdateConfigResponse]) error
	mustEmbedUnimplementedAgentConfigServiceServer()
}

// UnimplementedAgentConfigServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAgentConfigServiceServer struct{}

func (UnimplementedAgentConfigServiceServer) GetAgentConfig(context.Context, *ListAgentsModulesRequest) (*ListAgentsModulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgentConfig not implemented")
}
func (UnimplementedAgentConfigServiceServer) AgentModuleUpdateStream(grpc.BidiStreamingServer[AgentModuleConfiguration, UpdateConfigResponse]) error {
	return status.Errorf(codes.Unimplemented, "method AgentModuleUpdateStream not implemented")
}
func (UnimplementedAgentConfigServiceServer) mustEmbedUnimplementedAgentConfigServiceServer() {}
func (UnimplementedAgentConfigServiceServer) testEmbeddedByValue()                            {}

// UnsafeAgentConfigServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AgentConfigServiceServer will
// result in compilation errors.
type UnsafeAgentConfigServiceServer interface {
	mustEmbedUnimplementedAgentConfigServiceServer()
}

func RegisterAgentConfigServiceServer(s grpc.ServiceRegistrar, srv AgentConfigServiceServer) {
	// If the following call pancis, it indicates UnimplementedAgentConfigServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AgentConfigService_ServiceDesc, srv)
}

func _AgentConfigService_GetAgentConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAgentsModulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentConfigServiceServer).GetAgentConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AgentConfigService_GetAgentConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentConfigServiceServer).GetAgentConfig(ctx, req.(*ListAgentsModulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentConfigService_AgentModuleUpdateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentConfigServiceServer).AgentModuleUpdateStream(&grpc.GenericServerStream[AgentModuleConfiguration, UpdateConfigResponse]{ServerStream: stream})
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type AgentConfigService_AgentModuleUpdateStreamServer = grpc.BidiStreamingServer[AgentModuleConfiguration, UpdateConfigResponse]

// AgentConfigService_ServiceDesc is the grpc.ServiceDesc for AgentConfigService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AgentConfigService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "agent.AgentConfigService",
	HandlerType: (*AgentConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAgentConfig",
			Handler:    _AgentConfigService_GetAgentConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AgentModuleUpdateStream",
			Handler:       _AgentConfigService_AgentModuleUpdateStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "agent_config.proto",
}
