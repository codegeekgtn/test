filter {
  #Fields based on https://www.juniper.net/documentation/en_US/webapp5.5/topics/reference/w-a-s-postgres-log.html (february 2022)
  #and https://www.postgresql.org/docs/current/runtime-config-logging.html (current 14.2)
  #and https://www.elastic.co/guide/en/beats/filebeat/7.13/filebeat-module-postgresql.html
  #and filebeat fields.yml version 7.13.4 oss
  
  #Filebeat postgresql module, version 2.0.1
  #Filter Input requirements -> fileset: datatype
  #                             log: plain text

  split {
    field => "message"
    terminator => "<utm-log-separator>"
  }
  json {
    source => "message"
  }
  
  if ([event][module] and [event][module] == "postgresql") 
  or ([service][type] and [service][type] == "postgresql") {
    #Generating dataType and dataSource fields
        mutate {
            add_field => { "dataSource" => "%{[host][hostname]}" }
        }
    if [event][module] {
        mutate {
            add_field => { "dataType" => "%{[event][module]}" }
        }
    } else if [service][type] {
        mutate {
            add_field => { "dataType" => "%{[service][type]}" }
        }
    }
    
    #......................................................................#
    #Parse message field
    if [message] {
        grok {
          match => {
              "message" => [
              "%{GREEDYDATA:pg_time} %{IPORHOST:pg_host} %{WORD:irrelevant}\[%{INT:pg_pid}\]:(\s)?\[%{DATA:pg_group_id}\] %{INT:pg_error_code} %{GREEDYDATA:pg_session_id} %{WORD:pg_message_type}:(\s)?%{GREEDYDATA:pg_message}",
              "%{GREEDYDATA:pg_time} \[%{DATA:pg_group_id}\] %{WORD:pg_message_type}:(\s)*%{GREEDYDATA:pg_message}"
              ]
          } 
           
        }
    #......................................................................#	   
    #Formatting number values
      if [postgresql][log][client_port] {
        mutate { convert => { "[postgresql][log][client_port]" => "integer" } }
      }
      if [pg_pid] {
        mutate { convert => { "pg_pid" => "integer" } }
      }
    #......................................................................#
    #Then add all possible fields to the json tree structure

        mutate { 
            #General fields from ECS
            rename => { "host" => "[logx][postgresql][host]" }
            rename => { "service" => "[logx][postgresql][service]" }
            rename => { "ecs" => "[logx][postgresql][ecs]" }
            rename => { "agent" => "[logx][postgresql][agent]" }
            rename => { "fileset" => "[logx][postgresql][fileset]" }
            rename => { "event" => "[logx][postgresql][event]" }
            rename => { "input" => "[logx][postgresql][input]" }
            rename => { "labels" => "[logx][postgresql][labels]" }
            rename => { "as" => "[logx][postgresql][as]" }
            rename => { "client" => "[logx][postgresql][client]" }
            rename => { "cloud" => "[logx][postgresql][cloud]" }
            rename => { "code_signature" => "[logx][postgresql][code_signature]" }
            rename => { "container" => "[logx][postgresql][container]" }
            rename => { "destination" => "[logx][postgresql][destination]" }
            rename => { "dll" => "[logx][postgresql][dll]" }
            rename => { "dns" => "[logx][postgresql][dns]" }
            rename => { "error" => "[logx][postgresql][error]" }
            rename => { "file" => "[logx][postgresql][file]" }
            rename => { "geo" => "[logx][postgresql][geo]" }
            rename => { "hash" => "[logx][postgresql][hash]" }
            rename => { "http" => "[logx][postgresql][http]" }
            rename => { "interface" => "[logx][postgresql][interface]" }
            rename => { "network" => "[logx][postgresql][network]" }
            rename => { "observer" => "[logx][postgresql][observer]" }
            rename => { "organization" => "[logx][postgresql][organization]" }
            rename => { "package" => "[logx][postgresql][package]" }
            rename => { "pe" => "[logx][postgresql][pe]" }
            rename => { "process" => "[logx][postgresql][process]" }
            rename => { "registry" => "[logx][postgresql][registry]" }
            rename => { "related" => "[logx][postgresql][related]" }
            rename => { "rule" => "[logx][postgresql][rule]" }
            rename => { "server" => "[logx][postgresql][server]" }
            rename => { "source" => "[logx][postgresql][source]" }
            rename => { "threat" => "[logx][postgresql][threat]" }
            rename => { "tls" => "[logx][postgresql][tls]" }
            rename => { "span.id" => "[logx][postgresql][span.id]" }
            rename => { "trace.id" => "[logx][postgresql][trace.id]" }
            rename => { "transaction.id" => "[logx][postgresql][transaction.id]" }
            rename => { "url" => "[logx][postgresql][url]" }
            rename => { "user" => "[logx][postgresql][user]" }
            rename => { "vlan" => "[logx][postgresql][vlan]" }
            rename => { "vulnerability" => "[logx][postgresql][vulnerability]" }
            rename => { "x509" => "[logx][postgresql][x509]" }

            #Fields from postgresql module
            rename => { "[postgresql][log][client_addr]" => "[logx][postgresql][src_ip]" }
            rename => { "[postgresql][log][client_port]" => "[logx][postgresql][src_port]" }
            rename => { "postgresql" => "[logx][postgresql]" }

            #Fields from postgresql logs
            rename => { "pg_time" => "[logx][postgresql][pg_time]" }
            rename => { "pg_host" => "[logx][postgresql][pg_host]" }
            rename => { "pg_pid" => "[logx][postgresql][pg_pid]" }
            rename => { "pg_group_id" => "[logx][postgresql][pg_group_id]" }
            rename => { "pg_error_code" => "[logx][postgresql][pg_error_code]" }
            rename => { "pg_session_id" => "[logx][postgresql][pg_session_id]" }
            rename => { "pg_message_type" => "[logx][postgresql][pg_message_type]" }
            rename => { "message" => "[logx][postgresql][message]" }

        }
    
    #Finally, remove unnecessary fields
        mutate {
            remove_field => ["@version","path","tags","log","irrelevant","pg_message"]
        }
    }
  }
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["headers"]
   }
}
