filter {
  #Filebeat haproxy module, version 1.0.0
  split {
    field => "message"
    terminator => "<utm-log-separator>"
  }

  json {
    source => "message"
  }

  if ([event][module] and [event][module] == "haproxy") 
  or ([service][type] and [service][type] == "haproxy") {
    #Generating dataType and dataSource fields
        mutate {
            add_field => { "dataSource" => "%{[host][hostname]}" }
        }
    if [event][module] {
        mutate {
            add_field => { "dataType" => "%{[event][module]}" }
        }
    } else if [service][type] {
        mutate {
            add_field => { "dataType" => "%{[service][type]}" }
        }
    } 
    
    #......................................................................#
    #Then add all possible fields to the json tree structure

        mutate { 
            #General fields from ECS
            rename => { "host" => "[logx][haproxy][host]" }
            rename => { "service" => "[logx][haproxy][service]" }
            rename => { "ecs" => "[logx][haproxy][ecs]" }
            rename => { "agent" => "[logx][haproxy][agent]" }
            rename => { "fileset" => "[logx][haproxy][fileset]" }
            rename => { "event" => "[logx][haproxy][event]" }
            rename => { "input" => "[logx][haproxy][input]" }
            rename => { "labels" => "[logx][haproxy][labels]" }
            rename => { "as" => "[logx][haproxy][as]" }
            rename => { "client" => "[logx][haproxy][client]" }
            rename => { "cloud" => "[logx][haproxy][cloud]" }
            rename => { "code_signature" => "[logx][haproxy][code_signature]" }
            rename => { "container" => "[logx][haproxy][container]" }
            rename => { "destination" => "[logx][haproxy][destination]" }
            rename => { "dll" => "[logx][haproxy][dll]" }
            rename => { "dns" => "[logx][haproxy][dns]" }
            rename => { "error" => "[logx][haproxy][error]" }
            rename => { "file" => "[logx][haproxy][file]" }
            rename => { "geo" => "[logx][haproxy][geo]" }
            rename => { "hash" => "[logx][haproxy][hash]" }
            rename => { "http" => "[logx][haproxy][http]" }
            rename => { "interface" => "[logx][haproxy][interface]" }
            rename => { "network" => "[logx][haproxy][network]" }
            rename => { "observer" => "[logx][haproxy][observer]" }
            rename => { "organization" => "[logx][haproxy][organization]" }
            rename => { "package" => "[logx][haproxy][package]" }
            rename => { "pe" => "[logx][haproxy][pe]" }
            rename => { "process" => "[logx][haproxy][process]" }
            rename => { "registry" => "[logx][haproxy][registry]" }
            rename => { "related" => "[logx][haproxy][related]" }
            rename => { "rule" => "[logx][haproxy][rule]" }
            rename => { "server" => "[logx][haproxy][server]" }
            rename => { "source" => "[logx][haproxy][source]" }
            rename => { "threat" => "[logx][haproxy][threat]" }
            rename => { "tls" => "[logx][haproxy][tls]" }
            rename => { "span.id" => "[logx][haproxy][span.id]" }
            rename => { "trace.id" => "[logx][haproxy][trace.id]" }
            rename => { "transaction.id" => "[logx][haproxy][transaction.id]" }
            rename => { "url" => "[logx][haproxy][url]" }
            rename => { "user" => "[logx][haproxy][user]" }
            rename => { "vlan" => "[logx][haproxy][vlan]" }
            rename => { "vulnerability" => "[logx][haproxy][vulnerability]" }
            rename => { "x509" => "[logx][haproxy][x509]" }

            #Fields from haproxy module
            rename => { "[haproxy][log]" => "[logx][haproxy][log]" }
            rename => { "[haproxy][frontend_name]" => "[logx][haproxy][frontend_name]" }
            rename => { "[haproxy][backend_name]" => "[logx][haproxy][backend_name]" }
            rename => { "[haproxy][server_name]" => "[logx][haproxy][server_name]" }
            rename => { "[haproxy][total_waiting_time_ms]" => "[logx][haproxy][total_waiting_time_ms]" }
            rename => { "[haproxy][connection_wait_time_ms]" => "[logx][haproxy][connection_wait_time_ms]" }
            rename => { "[haproxy][bytes_read]" => "[logx][haproxy][bytes_read]" }
            rename => { "[haproxy][time_queue]" => "[logx][haproxy][time_queue]" }
            rename => { "[haproxy][time_backend_connect]" => "[logx][haproxy][time_backend_connect]" }
            rename => { "[haproxy][server_queue]" => "[logx][haproxy][server_queue]" }
            rename => { "[haproxy][backend_queue]" => "[logx][haproxy][backend_queue]" }
            rename => { "[haproxy][bind_name]" => "[logx][haproxy][bind_name]" }
            rename => { "[haproxy][error_message]" => "[logx][haproxy][error_message]" }
            rename => { "[haproxy][source]" => "[logx][haproxy][source]" }
            rename => { "[haproxy][termination_state]" => "[logx][haproxy][termination_state]" }
            rename => { "[haproxy][mode]" => "[logx][haproxy][mode]" }
            rename => { "[haproxy][connections]" => "[logx][haproxy][connections]" }
            rename => { "[haproxy][client]" => "[logx][haproxy][client]" }
            rename => { "[haproxy][process_name]" => "[logx][haproxy][process_name]" }
            rename => { "[haproxy][pid]" => "[logx][haproxy][pid]" }
            rename => { "[haproxy][destination]" => "[logx][haproxy][destination]" }
            rename => { "[haproxy][geoip]" => "[logx][haproxy][geoip]" }
            rename => { "[haproxy][http]" => "[logx][haproxy][http]" }
            rename => { "[haproxy][tcp]" => "[logx][haproxy][tcp]" }
            rename => { "message" => "[logx][haproxy][message]" }
        }
    
    #Finally, remove unnecessary fields
        mutate {
            remove_field => ["@version","path","tags","log"]
        }

  }
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["headers"]
   }
}
