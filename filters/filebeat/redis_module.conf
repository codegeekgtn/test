filter {
  #Fields based on https://www.elastic.co/guide/en/beats/filebeat/7.13/filebeat-module-redis.html (march 2022)
  #https://www.elastic.co/guide/en/beats/filebeat/7.13/exported-fields-redis.html (march 2022)
  #https://redis.io/ version 6.2.6 stable (march 2022)
  #https://build47.com/redis-log-format-levels/ (march 2022)
  #and filebeat fields.yml version 7.13.4 oss
  #As the docs says this module work with one event per line, filebeat must ensure to send one event per line.
  
  #Filebeat redis module, version 2.0.1. Supports older 2.x log versions to latter (6.2.6)
  #Filter Input requirements -> fileset: datatype
  #                             log: plain text
  #                             slowlog: plain text

  split {
    field => "message"
    terminator => "<utm-log-separator>"
  }
  json {
    source => "message"
  }

  if ([event][module] and [event][module] == "redis") 
  or ([service][type] and [service][type] == "redis") {
    #Generating dataType and dataSource fields
        mutate {
            add_field => { "dataSource" => "%{[host][hostname]}" }
        }
    if [event][module] {
        mutate {
            add_field => { "dataType" => "%{[event][module]}" }
        }
    } else if [service][type] {
        mutate {
            add_field => { "dataType" => "%{[service][type]}" }
        }
    }
    #......................................................................#
    #Parse message field, first newer versions (3.x+ to current stable 6.2.6), second 2.x versions
      if [message] {  
        grok {
          match => {
              "message" => [
              "%{INT:pid}:%{WORD:role_enc} (?<timestamp>(%{MONTHDAY} %{MONTH} %{YEAR} %{TIME})) %{DATA:level_enc} %{GREEDYDATA:msg}",
              "\[%{INT:pid}\] (?<timestamp>(%{MONTHDAY} %{MONTH} %{TIME})) %{DATA:level_enc} %{GREEDYDATA:msg}"
              ]
          } 
        }
      }
    #......................................................................#
    #Decoding role...
    if [role_enc] {
    if [role_enc] == "x" or [role_enc] == "X" {
       mutate {
        add_field => {
         "[logx][redis][role]" => "sentinel"
        }
      }
    } else if [role_enc] == "c" or [role_enc] == "C" {
       mutate {
        add_field => {
         "[logx][redis][role]" => "child"
        }
      }
    } else if [role_enc] == "s" or [role_enc] == "S" {
       mutate {
        add_field => {
         "[logx][redis][role]" => "slave"
        }
      }
    } else if [role_enc] == "m" or [role_enc] == "M" {
       mutate {
        add_field => {
         "[logx][redis][role]" => "master"
        }
      }
    } else {
       mutate {
        add_field => {
         "[logx][redis][role]" => "unknown"
        }
      }
    }
    }
    #......................................................................#
    #Decoding level...
    if [level_enc] {
    if [level_enc] == "." {
       mutate {
        add_field => {
         "[logx][redis][level]" => "debug"
        }
      }
    } else if [level_enc] == "-" {
       mutate {
        add_field => {
         "[logx][redis][level]" => "verbose"
        }
      }
    } else if [level_enc] == "*" {
       mutate {
        add_field => {
         "[logx][redis][level]" => "notice"
        }
      }
    } else if [level_enc] == "#" {
       mutate {
        add_field => {
         "[logx][redis][level]" => "warning"
        }
      }
    } else {
       mutate {
        add_field => {
         "[logx][redis][level]" => "unknown"
        }
      }
    }
    }
    #......................................................................#
    #Then add all possible fields to the json tree structure

        #Fields variants from module
        mutate {
            rename => { "redis" => "[logx][redis]" }
        }
        #Fields from logs
        mutate {
            rename => { "role_enc" => "[logx][redis][role_enc]" }
            rename => { "level_enc" => "[logx][redis][level_enc]" }
            rename => { "pid" => "[logx][redis][pid]" }
            rename => { "msg" => "[logx][redis][msg]" }
            rename => { "timestamp" => "[logx][redis][timestamp]" }
        }
        mutate { 
        #General fields from ECS
            rename => { "host" => "[logx][redis][host]" }
            rename => { "service" => "[logx][redis][service]" }
            rename => { "ecs" => "[logx][redis][ecs]" }
            rename => { "agent" => "[logx][redis][agent]" }
            rename => { "fileset" => "[logx][redis][fileset]" }
            rename => { "event" => "[logx][redis][event]" }
            rename => { "input" => "[logx][redis][input]" }
            rename => { "labels" => "[logx][redis][labels]" }
            rename => { "as" => "[logx][redis][as]" }
            rename => { "client" => "[logx][redis][client]" }
            rename => { "cloud" => "[logx][redis][cloud]" }
            rename => { "code_signature" => "[logx][redis][code_signature]" }
            rename => { "container" => "[logx][redis][container]" }
            rename => { "destination" => "[logx][redis][destination]" }
            rename => { "dll" => "[logx][redis][dll]" }
            rename => { "dns" => "[logx][redis][dns]" }
            rename => { "error" => "[logx][redis][error]" }
            rename => { "file" => "[logx][redis][file]" }
            rename => { "geo" => "[logx][redis][geo]" }
            rename => { "hash" => "[logx][redis][hash]" }
            rename => { "http" => "[logx][redis][http]" }
            rename => { "interface" => "[logx][redis][interface]" }
            rename => { "network" => "[logx][redis][network]" }
            rename => { "observer" => "[logx][redis][observer]" }
            rename => { "organization" => "[logx][redis][organization]" }
            rename => { "package" => "[logx][redis][package]" }
            rename => { "pe" => "[logx][redis][pe]" }
            rename => { "process" => "[logx][redis][process]" }
            rename => { "registry" => "[logx][redis][registry]" }
            rename => { "related" => "[logx][redis][related]" }
            rename => { "rule" => "[logx][redis][rule]" }
            rename => { "server" => "[logx][redis][server]" }
            rename => { "source" => "[logx][redis][source]" }
            rename => { "threat" => "[logx][redis][threat]" }
            rename => { "tls" => "[logx][redis][tls]" }
            rename => { "span.id" => "[logx][redis][span.id]" }
            rename => { "trace.id" => "[logx][redis][trace.id]" }
            rename => { "transaction.id" => "[logx][redis][transaction.id]" }
            rename => { "url" => "[logx][redis][url]" }
            rename => { "user" => "[logx][redis][user]" }
            rename => { "vlan" => "[logx][redis][vlan]" }
            rename => { "vulnerability" => "[logx][redis][vulnerability]" }
            rename => { "x509" => "[logx][redis][x509]" }

            #Rename message field to add it to the structure
            rename => { "message" => "[logx][redis][message]" }

        }

        #......................................................................#	   
        #Formatting number values
        if [logx][redis][pid] {   
          mutate {
            convert => {
              "[logx][redis][pid]" => "integer"
            }
          }
        }
        #......................................................................#
        #Finally, remove unnecessary fields
        mutate {
            remove_field => ["@version","tags","log","irrelevant"]
        }
  }
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["headers"]
   }
}
