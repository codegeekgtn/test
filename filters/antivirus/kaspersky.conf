filter {

# KAV filter version 2.0.1
# Support Syslog CEF format
# Based in https://docs.centrify.com/Content/IntegrationContent/SIEM/arcsight-cef/arcsight-cef-format.htm
# and https://docs.devo.com/confluence/ndt/latest/devo-parsers/technologies-supported-in-cef-syslog-format/cef0-kaspersky
# and https://support.kaspersky.com/KLMS/8.2/en-US/151504.htm
# and https://support.kaspersky.com/ScanEngine/1.0/en-US/186767.htm
# The entrypoint will be removed later, itns't necessary

split {
  field => "message"
  terminator => "<utm-log-separator>"
}

  #Looking for datasource generated by an agent and parse original message
  if [message]=~/\[utm_stack_agent_ds=(.+)\]-(.+)/ {
    grok {
      match => {
        "message" => [ "\[utm_stack_agent_ds=%{DATA:dataSource}\]-%{GREEDYDATA:original_log_message}" ]
      }
    }
  }
  if [original_log_message] {
    mutate {
      update => { "message" => "%{[original_log_message]}" }
    }
  }

if ![dataType] {
        #First, search to define the entry point contain CEF:, contain |something
        if [message] and ("CEF:" in [message] and [message] =~/\|(\w+)?(\s)?Kaspersky(\s)?(\w+)?\|/ 
        and ( [message] =~/cs\d/ or "in=" in [message] or "out=" in [message] or "end=" in [message])){
#......................................................................#
#Generating dataSource field required by CurrelationRulesEngine
#Checks if exists, if not evaluate to the host variable
           if (![dataSource]){
              mutate {
               add_field => { "dataSource" => "%{host}" }
              }
           }
#......................................................................# 
#Generating dataType field required by CurrelationRulesEngine
              mutate {
               add_field => { "dataType" => "antivirus-kaspersky" }
              }
#......................................................................#
#Using grok to parse header of the message
              if [message] =~/^(CEF)/ {
               grok {
                 match => {
                   "message" => [
                      "CEF:%{INT:cef_version}%{GREEDYDATA:cef_msg_all}"
                   ]
                 }
               }
              } else {
                grok {
                 match => {
                   "message" => [
                      "(%{INT:not_defined})?(\s)?(<%{NUMBER:priority}>)?(%{INT:syslog_version})? %{GREEDYDATA:syslog_date_host}CEF:(\s)?%{INT:cef_version}%{GREEDYDATA:cef_msg_all}"
                   ]
                 }
               }
              }
#......................................................................#
#Using grok to parse components of the cef_message
              if [cef_msg_all] {
               grok {
                 match => {
                   "cef_msg_all" => [
                      "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:deviceVersion}\|%{DATA:signatureID}\|%{DATA:desc_msg}\|%{DATA:cef_device_severity}\|(\s)?%{GREEDYDATA:cef_msg}"
                   ]
                 }
               }
              }
#......................................................................#
#Using the kv filter with default config, usefull in key-value logs
        if [cef_msg]{
          kv { source => "cef_msg" }
        }

#......................................................................#
#Remove fields that have issues with kv filter 
   mutate {
      remove_field => ["destinationZoneURI","msg","customerURI","destinationZoneExternalID",
      "cs1","cs2","cs3","cs4","cs5","cs6","cs7","cs8","cs9","cs10","originalAgentZoneURI","flexString1","cat",
      "cs1Label","cs2Label","cs3Label","cs4Label","cs5Label","cs6Label","cs7Label","cs8Label","cs9Label","cs10Label",
      "cn1","cn2","cn3","cn4","cn5","cn6","cn7","cn8","cn9","cn10","cn1Label","cn2Label","cn3Label","cn4Label",
      "cn5Label","cn6Label","cn7Label","cn8Label","cn9Label","cn10Label"]
   }
#......................................................................#
#Using grok to parse kv issued fields
        if [cef_msg]{
          grok { match => { "cef_msg" => [ "destinationZoneURI=%{DATA:destinationZoneURI} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "msg=%{DATA:msg} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "customerURI=%{DATA:customerURI} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "destinationZoneExternalID=%{DATA:destinationZoneExternalID} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs1=%{DATA:cs1} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs2=%{DATA:cs2} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs3=%{DATA:cs3} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs4=%{DATA:cs4} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs5=%{DATA:cs5} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs6=%{DATA:cs6} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs7=%{DATA:cs7} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs8=%{DATA:cs8} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs9=%{DATA:cs9} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs10=%{DATA:cs10} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn1=%{DATA:cn1} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn2=%{DATA:cn2} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn3=%{DATA:cn3} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn4=%{DATA:cn4} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn5=%{DATA:cn5} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn6=%{DATA:cn6} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn7=%{DATA:cn7} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn8=%{DATA:cn8} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn9=%{DATA:cn9} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn10=%{DATA:cn10} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "originalAgentZoneURI=%{DATA:originalAgentZoneURI} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "flexString1=%{DATA:flexString1} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cat=%{DATA:cat} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs1Label=%{DATA:cs1Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs2Label=%{DATA:cs2Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs3Label=%{DATA:cs3Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs4Label=%{DATA:cs4Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs5Label=%{DATA:cs5Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs6Label=%{DATA:cs6Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs7Label=%{DATA:cs7Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs8Label=%{DATA:cs8Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs9Label=%{DATA:cs9Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cs10Label=%{DATA:cs10Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn1Label=%{DATA:cn1Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn2Label=%{DATA:cn2Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn3Label=%{DATA:cn3Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn4Label=%{DATA:cn4Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn5Label=%{DATA:cn5Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn6Label=%{DATA:cn6Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn7Label=%{DATA:cn7Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn8Label=%{DATA:cn8Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn9Label=%{DATA:cn9Label} %{WORD}=" ] } }
          grok { match => { "cef_msg" => [ "cn10Label=%{DATA:cn10Label} %{WORD}=" ] } }
        }
#......................................................................#
#Add the rest of fields to the tree structure
    #src can be in multiple fields
    if [src] {
        mutate {
          rename => { "[src]" => "[logx][kaspersky][src_ip]" }
        }
    } else if [cs4Label] and ("clientIp" in [cs4Label] or "ClientIp" in [cs4Label] or "ClientIP" in [cs4Label]) {
        mutate {
          rename => { "[cs4]" => "[logx][kaspersky][src_ip]" }
        }
    } else if [FromIPAddress] {
        mutate {
          rename => { "[FromIPAddress]" => "[logx][kaspersky][src_ip]" }
        }
    } 
       mutate {

          #Rename fields used by correlation engine
          rename => { "[dst]" => "[logx][kaspersky][dest_ip]" }
          rename => { "[protocol]" => "[logx][kaspersky][proto]" }

          #Rename fields used by correlation engine
          rename => { "[at]" => "[logx][kaspersky][at]" }
          rename => { "[cs1]" => "[logx][kaspersky][cs1]" }
          rename => { "[cs2]" => "[logx][kaspersky][cs2]" }
          rename => { "[cs3]" => "[logx][kaspersky][cs3]" }
          rename => { "[cs4]" => "[logx][kaspersky][cs4]" }
          rename => { "[cs5]" => "[logx][kaspersky][cs5]" }
          rename => { "[cs6]" => "[logx][kaspersky][cs6]" }
          rename => { "[cs7]" => "[logx][kaspersky][cs7]" }
          rename => { "[cs8]" => "[logx][kaspersky][cs8]" }
          rename => { "[cs9]" => "[logx][kaspersky][cs9]" }
          rename => { "[cs10]" => "[logx][kaspersky][cs10]" }
          rename => { "[cs1Label]" => "[logx][kaspersky][cs1Label]" }
          rename => { "[cs2Label]" => "[logx][kaspersky][cs2Label]" }
          rename => { "[cs3Label]" => "[logx][kaspersky][cs3Label]" }
          rename => { "[cs4Label]" => "[logx][kaspersky][cs4Label]" }
          rename => { "[cs5Label]" => "[logx][kaspersky][cs5Label]" }
          rename => { "[cs6Label]" => "[logx][kaspersky][cs6Label]" }
          rename => { "[cs7Label]" => "[logx][kaspersky][cs7Label]" }
          rename => { "[cs8Label]" => "[logx][kaspersky][cs8Label]" }
          rename => { "[cs9Label]" => "[logx][kaspersky][cs9Label]" }
          rename => { "[cs10Label]" => "[logx][kaspersky][cs10Label]" }
          rename => { "[cn1]" => "[logx][kaspersky][cn1]" }
          rename => { "[cn2]" => "[logx][kaspersky][cn2]" }
          rename => { "[cn3]" => "[logx][kaspersky][cn3]" }
          rename => { "[cn4]" => "[logx][kaspersky][cn4]" }
          rename => { "[cn5]" => "[logx][kaspersky][cn5]" }
          rename => { "[cn6]" => "[logx][kaspersky][cn6]" }
          rename => { "[cn7]" => "[logx][kaspersky][cn7]" }
          rename => { "[cn8]" => "[logx][kaspersky][cn8]" }
          rename => { "[cn9]" => "[logx][kaspersky][cn9]" }
          rename => { "[cn10]" => "[logx][kaspersky][cn10]" }
          rename => { "[cn1Label]" => "[logx][kaspersky][cn1Label]" }
          rename => { "[cn2Label]" => "[logx][kaspersky][cn2Label]" }
          rename => { "[cn3Label]" => "[logx][kaspersky][cn3Label]" }
          rename => { "[cn4Label]" => "[logx][kaspersky][cn4Label]" }
          rename => { "[cn5Label]" => "[logx][kaspersky][cn5Label]" }
          rename => { "[cn6Label]" => "[logx][kaspersky][cn6Label]" }
          rename => { "[cn7Label]" => "[logx][kaspersky][cn7Label]" }
          rename => { "[cn8Label]" => "[logx][kaspersky][cn8Label]" }
          rename => { "[cn9Label]" => "[logx][kaspersky][cn9Label]" }
          rename => { "[cn10Label]" => "[logx][kaspersky][cn10Label]" }
          rename => { "[eventId]" => "[logx][kaspersky][eventId]" }
          rename => { "[externalId]" => "[logx][kaspersky][externalId]" }
          rename => { "[msg]" => "[logx][kaspersky][msg]" }
          rename => { "[end]" => "[logx][kaspersky][end]" }
          rename => { "[mrt]" => "[logx][kaspersky][mrt]" }
          rename => { "[in]" => "[logx][kaspersky][in]" }
          rename => { "[out]" => "[logx][kaspersky][out]" }
          rename => { "[customerID]" => "[logx][kaspersky][customerID]" }
          rename => { "[customerURI]" => "[logx][kaspersky][customerURI]" }
          rename => { "[catdt]" => "[logx][kaspersky][catdt]" }
          rename => { "[modelConfidence]" => "[logx][kaspersky][modelConfidence]" }
          rename => { "[cef_device_severity]" => "[logx][kaspersky][cef_device_severity]" }
          rename => { "[relevance]" => "[logx][kaspersky][relevance]" }
          rename => { "[assetCriticality]" => "[logx][kaspersky][assetCriticality]" }
          rename => { "[priority]" => "[logx][kaspersky][priority]" }
          rename => { "[art]" => "[logx][kaspersky][art]" }
          rename => { "[cat]" => "[logx][kaspersky][cat]" }
          rename => { "[deviceSeverity]" => "[logx][kaspersky][deviceSeverity]" }
          rename => { "[act]" => "[logx][kaspersky][act]" }
          rename => { "[rt]" => "[logx][kaspersky][rt]" }
          rename => { "[dhost]" => "[logx][kaspersky][dhost]" }
          rename => { "[destinationZoneID]" => "[logx][kaspersky][destinationZoneID]" }
          rename => { "[destinationZoneURI]" => "[logx][kaspersky][destinationZoneURI]" }
          rename => { "[destinationZoneExternalID]" => "[logx][kaspersky][destinationZoneExternalID]" }
          rename => { "[dntdom]" => "[logx][kaspersky][dntdom]" }
          rename => { "[dlong]" => "[logx][kaspersky][dlong]" }
          rename => { "[dlat]" => "[logx][kaspersky][dlat]" }
          rename => { "[fname]" => "[logx][kaspersky][fname]" }
          rename => { "[flexString1]" => "[logx][kaspersky][flexString1]" }
          rename => { "[cn3]" => "[logx][kaspersky][cn3]" }
          rename => { "[locality]" => "[logx][kaspersky][locality]" }
          rename => { "[ahost]" => "[logx][kaspersky][ahost]" }
          rename => { "[agt]" => "[logx][kaspersky][agt]" }
          rename => { "[amac]" => "[logx][kaspersky][amac]" }
          rename => { "[av]" => "[logx][kaspersky][av]" }
          rename => { "[atz]" => "[logx][kaspersky][atz]" }
          rename => { "[dvchost]" => "[logx][kaspersky][dvchost]" }
          rename => { "[dtz]" => "[logx][kaspersky][dtz]" }
          rename => { "[eventAnnotationStageUpdateTime]" => "[logx][kaspersky][eventAnnotationStageUpdateTime]" }
          rename => { "[eventAnnotationModificationTime]" => "[logx][kaspersky][eventAnnotationModificationTime]" }
          rename => { "[eventAnnotationAuditTrail]" => "[logx][kaspersky][eventAnnotationAuditTrail]" }
          rename => { "[eventAnnotationVersion]" => "[logx][kaspersky][eventAnnotationVersion]" }
          rename => { "[eventAnnotationFlags]" => "[logx][kaspersky][eventAnnotationFlags]" }
          rename => { "[eventAnnotationEndTime]" => "[logx][kaspersky][eventAnnotationEndTime]" }
          rename => { "[eventAnnotationManagerReceiptTime]" => "[logx][kaspersky][eventAnnotationManagerReceiptTime]" }
          rename => { "[originalAgentHostName]" => "[logx][kaspersky][originalAgentHostName]" }
          rename => { "[originalAgentAddress]" => "[logx][kaspersky][originalAgentAddress]" }
          rename => { "[originalAgentMacAddress]" => "[logx][kaspersky][originalAgentMacAddress]" }
          rename => { "[originalAgentZoneURI]" => "[logx][kaspersky][originalAgentZoneURI]" }
          rename => { "[originalAgentVersion]" => "[logx][kaspersky][originalAgentVersion]" }
          rename => { "[originalAgentId]" => "[logx][kaspersky][originalAgentId]" }
          rename => { "[originalAgentType]" => "[logx][kaspersky][originalAgentType]" }
          rename => { "[_cefVer]" => "[logx][kaspersky][_cefVer]" }
          rename => { "[ad.arcSightEventPath]" => "[logx][kaspersky][ad.arcSightEventPath]" }
          rename => { "[aid]" => "[logx][kaspersky][aid]" }
          rename => { "[signatureID]" => "[logx][kaspersky][signatureID]" }
          rename => { "[embDeviceVendor]" => "[logx][kaspersky][embDeviceVendor]" }
          rename => { "[embDeviceProduct]" => "[logx][kaspersky][embDeviceProduct]" }
          rename => { "[desc_msg]" => "[logx][kaspersky][desc_msg]" }
          rename => { "[cef_version]" => "[logx][kaspersky][cef_version]" }
          rename => { "[deviceVersion]" => "[logx][kaspersky][deviceVersion]" }
          rename => { "[severity]" => "[logx][kaspersky][severity]" }
          rename => { "[message]" => "[logx][kaspersky][message]" }

          #New fields detected in docs Kaspersky Security 8 for Linux Mail Server
          rename => { "[duser]" => "[logx][kaspersky][duser]" }
          rename => { "[suser]" => "[logx][kaspersky][suser]" }
          rename => { "[deviceProcessName]" => "[logx][kaspersky][deviceProcessName]" }
          rename => { "[cnt]" => "[logx][kaspersky][cnt]" }
          rename => { "[reason]" => "[logx][kaspersky][reason]" }
          rename => { "[outcome]" => "[logx][kaspersky][outcome]" }
          rename => { "[deviceCustomDate1]" => "[logx][kaspersky][deviceCustomDate1]" }
          rename => { "[deviceCustomDate1Label]" => "[logx][kaspersky][deviceCustomDate1Label]" }
          rename => { "[deviceServiceName]" => "[logx][kaspersky][deviceServiceName]" }
          rename => { "[deviceCustomDate2]" => "[logx][kaspersky][deviceCustomDate2]" }
          rename => { "[deviceCustomDate2Label]" => "[logx][kaspersky][deviceCustomDate2Label]" }
          rename => { "[fsize]" => "[logx][kaspersky][fsize]" }

          #New fields detected in docs Kaspersky Scan Engine
          rename => { "[dvcpid]" => "[logx][kaspersky][dvcpid]" }
          rename => { "[sproc]" => "[logx][kaspersky][sproc]" }
          rename => { "[dvc]" => "[logx][kaspersky][dvc]" }
          rename => { "[request]" => "[logx][kaspersky][request]" }
          rename => { "[fileHash]" => "[logx][kaspersky][fileHash]" }
          rename => { "[start]" => "[logx][kaspersky][start]" }

          #New fields detected in version 1.0.3 (real logs, SIEM)
          rename => { "[engine]" => "[logx][kaspersky][engine]" }
          rename => { "[method]" => "[logx][kaspersky][method]" }
          rename => { "[filePath]" => "[logx][kaspersky][filePath]" }
        }


   #Finally, remove unnecessary fields
   mutate {
      remove_field => ["@version","path","tags","type","syslog_version",
      "not_defined","cef_msg_all","cef_msg","syslog_date_host"]
   }
  }
 }
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["original_log_message","headers"]
   }
}
